apiVersion: apps/v1
kind: Deployment
metadata:
  name: pegasus-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pegasus-ui
  template:
    metadata:
      labels:
        app: pegasus-ui
    spec:
      imagePullSecrets:
      - name: pegasus-gitlab-registry-share-secret
      containers:
      - image: {{ .Values.image.name }}:{{ .Values.image.tag }}
        name: pegasus-ui
        imagePullPolicy: {{ .Values.kubernetes.imagePullPolicy }}
        env:
        - name: REACT_APP_API_URL
          value: "hello"
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          name: nginx-config
        - mountPath: /usr/share/nginx/html/assets/config
          name: pegasus-env-cfg
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: pegasus-env-cfg
        configMap:
          name: pegasus-env-cfg
---
apiVersion: v1
kind: Service
metadata:
  name: pegasus-ui-service
spec:
  type: ClusterIP
  selector:
    app: pegasus-ui
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        log_format  main '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" "$http_x_forwarded_for"';
        access_log  /var/log/nginx/access.log  main;
        sendfile        on;
        #tcp_nopush     on;
        keepalive_timeout  65;
        #gzip  on;
        include /etc/nginx/conf.d/*.conf;
        server {
            listen       80;
            server_name  localhost;
            root   /usr/share/nginx/html; #Change this line
            index  index.html index.htm;
            location / {
                try_files $uri $uri/ /index.html;
            }
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pegasus-env-cfg
data:
  config.json: |-
    {
      "apiUrl": "http://api.sylveron.com/",
      "showComponentErrorsBottomPanel": {{ .Values.showComponentErrorsBottomPanel }}
    }
